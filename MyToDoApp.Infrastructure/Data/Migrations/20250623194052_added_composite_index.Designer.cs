// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyToDoApp.Infrastructure.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyToDoApp.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ToDoDbContext))]
    [Migration("20250623194052_added_composite_index")]
    partial class added_composite_index
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyToDoApp.Domain.Models.ToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Auth0UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentToDoId")
                        .HasColumnType("integer");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Priority", "Auth0UserId")
                        .IsUnique()
                        .HasFilter("\"ParentToDoId\" IS NULL");

                    b.HasIndex("ParentToDoId", "Priority", "Auth0UserId")
                        .IsUnique()
                        .HasFilter("\"ParentToDoId\" IS NOT NULL");

                    b.ToTable("ToDos");
                });

            modelBuilder.Entity("MyToDoApp.Domain.Models.ToDo", b =>
                {
                    b.HasOne("MyToDoApp.Domain.Models.ToDo", "ParentToDo")
                        .WithMany("SubTodos")
                        .HasForeignKey("ParentToDoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentToDo");
                });

            modelBuilder.Entity("MyToDoApp.Domain.Models.ToDo", b =>
                {
                    b.Navigation("SubTodos");
                });
#pragma warning restore 612, 618
        }
    }
}
